#!/bin/bash 

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh

# Configure git
rm $HOME/.global-gitignore $HOME/.gitconfig
ln -s $HOME/.dotfiles/git/.global-gitignore $HOME/.global-gitignore
ln -s $HOME/.dotfiles/git/.gitconfig $HOME/.gitconfig

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink the Mackup config
rm $HOME/.mackup.cfg
ln -s $HOME/.dotfiles/macos/.mackup.cfg $HOME/.mackup.cfg

echo 'Install homebrew'
echo '----------------'
echo install homebrew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"

echo 'Install node'
echo '------------'
brew install node

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install php'
echo '-----------'
brew install php@8.0

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
mv composer.phar /usr/local/bin/composer

echo 'Install mackup'
echo '--------------'
brew install mackup

echo '++++++++++++++++++++++++++++++'
echo 'All done!'

echo '++++++++++++++++++++++++++++++'
echo 'Mackup'
echo 'Make sure icloud is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your icloud. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'

echo '++++++++++++++++++++++++++++++'